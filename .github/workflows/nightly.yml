name: Nightly Publish

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
#  schedule:
#    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
#VERSIONS
          - name: bullseye
            context: nightly/bullseye
            platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/386
            tags: |
              nightly-bullseye
          - name: slim-bullseye
            context: nightly/bullseye/slim
            platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/386
            tags: |
              nightly-bullseye-slim
          - name: bookworm
            context: nightly/bookworm
            platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x
            tags: |
              nightly-bookworm
              nightly
          - name: slim-bookworm
            context: nightly/bookworm/slim
            platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x
            tags: |
              nightly-bookworm-slim
              nightly-slim
          - name: alpine3.20
            context: nightly/alpine3.20
            platforms: linux/amd64,linux/arm64
            tags: |
              nightly-alpine3.20
          - name: alpine3.21
            context: nightly/alpine3.21
            platforms: linux/amd64,linux/arm64
            tags: |
              nightly-alpine3.21
              nightly-alpine
#VERSIONS
    name: ${{ matrix.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: rust-lang
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          username: rustopsbot
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            rustlang/rust
            ghcr.io/rust-lang/rust
          tags: ${{ matrix.tags }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
